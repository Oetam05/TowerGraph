package lab2_datos2;

import java.util.LinkedList;
import java.util.Queue;
import javax.swing.JOptionPane;

public class AnimationWindow extends javax.swing.JFrame {

    /**
     * Creates new form AnimationWindow
     */
    Animation animation;
    City city;
    public static String resultado;

    public AnimationWindow() {
        initComponents();
        resultado = "";
        city = new City();
        animation = new Animation(city);
        animation.setBounds(0, 0, this.getWidth() - 300, this.getHeight());
        this.add(animation);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addEdgeDialog = new javax.swing.JDialog(this, true);
        parentContent = new javax.swing.JPanel();
        originComboBox = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        destinyComboBox = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        weightTxt = new javax.swing.JTextField();
        addbtn = new javax.swing.JButton();
        traversalsDialog = new javax.swing.JDialog(this, true);
        mainContent = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        initialTowerComboBox = new javax.swing.JComboBox<>();
        BFSbtn = new javax.swing.JButton();
        DFSbtn = new javax.swing.JButton();
        mstDialog = new javax.swing.JDialog(this, true);
        jPanel2 = new javax.swing.JPanel();
        showmstbtn = new javax.swing.JButton();
        originmstComboBox = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        shortestPathDialog = new javax.swing.JDialog(this, true);
        jPanel3 = new javax.swing.JPanel();
        showDijkstrabtn = new javax.swing.JButton();
        originDijkstraComboBox = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        addEdge = new javax.swing.JButton();
        mstbtn = new javax.swing.JButton();
        titleShowDetails = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        showDetails = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        traversalsbtn = new javax.swing.JButton();
        cancelMst = new javax.swing.JButton();
        shortestPathbtn = new javax.swing.JButton();

        addEdgeDialog.setBackground(new java.awt.Color(21, 61, 121));
        addEdgeDialog.setResizable(false);
        addEdgeDialog.setSize(new java.awt.Dimension(400, 300));

        parentContent.setBackground(new java.awt.Color(21, 61, 121));
        parentContent.setPreferredSize(new java.awt.Dimension(400, 328));

        originComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                originComboBoxActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Origin Vertex");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Destiny Vertex");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Edge Weight");

        weightTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                weightTxtKeyTyped(evt);
            }
        });

        addbtn.setBackground(new java.awt.Color(255, 255, 255));
        addbtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        addbtn.setText("Add Edge");
        addbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout parentContentLayout = new javax.swing.GroupLayout(parentContent);
        parentContent.setLayout(parentContentLayout);
        parentContentLayout.setHorizontalGroup(
            parentContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(parentContentLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(54, 54, 54))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, parentContentLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(originComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(destinyComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(95, 95, 95))
            .addGroup(parentContentLayout.createSequentialGroup()
                .addGroup(parentContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(parentContentLayout.createSequentialGroup()
                        .addGap(119, 119, 119)
                        .addGroup(parentContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(addbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(parentContentLayout.createSequentialGroup()
                        .addGap(147, 147, 147)
                        .addComponent(weightTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        parentContentLayout.setVerticalGroup(
            parentContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(parentContentLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(parentContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(parentContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(originComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(destinyComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(weightTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(addbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(95, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout addEdgeDialogLayout = new javax.swing.GroupLayout(addEdgeDialog.getContentPane());
        addEdgeDialog.getContentPane().setLayout(addEdgeDialogLayout);
        addEdgeDialogLayout.setHorizontalGroup(
            addEdgeDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(parentContent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        addEdgeDialogLayout.setVerticalGroup(
            addEdgeDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(parentContent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        traversalsDialog.setResizable(false);
        traversalsDialog.setSize(new java.awt.Dimension(400, 300));

        mainContent.setBackground(new java.awt.Color(21, 61, 121));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Choose an initial tower");

        initialTowerComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                initialTowerComboBoxActionPerformed(evt);
            }
        });

        BFSbtn.setBackground(new java.awt.Color(255, 255, 255));
        BFSbtn.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        BFSbtn.setText("BFS Traversal");
        BFSbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BFSbtnActionPerformed(evt);
            }
        });

        DFSbtn.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        DFSbtn.setText("DFS Traversal");
        DFSbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DFSbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mainContentLayout = new javax.swing.GroupLayout(mainContent);
        mainContent.setLayout(mainContentLayout);
        mainContentLayout.setHorizontalGroup(
            mainContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainContentLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(DFSbtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addComponent(BFSbtn)
                .addGap(38, 38, 38))
            .addGroup(mainContentLayout.createSequentialGroup()
                .addGap(167, 167, 167)
                .addComponent(initialTowerComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainContentLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(104, 104, 104))
        );
        mainContentLayout.setVerticalGroup(
            mainContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainContentLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(initialTowerComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71)
                .addGroup(mainContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BFSbtn)
                    .addComponent(DFSbtn))
                .addContainerGap(78, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout traversalsDialogLayout = new javax.swing.GroupLayout(traversalsDialog.getContentPane());
        traversalsDialog.getContentPane().setLayout(traversalsDialogLayout);
        traversalsDialogLayout.setHorizontalGroup(
            traversalsDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainContent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        traversalsDialogLayout.setVerticalGroup(
            traversalsDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainContent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        mstDialog.setResizable(false);
        mstDialog.setSize(new java.awt.Dimension(400, 300));

        jPanel2.setBackground(new java.awt.Color(21, 61, 121));

        showmstbtn.setBackground(new java.awt.Color(255, 255, 255));
        showmstbtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        showmstbtn.setText("Minimum Spanning Tree");
        showmstbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showmstbtnActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Inital Vertex");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(showmstbtn))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(126, 126, 126)
                        .addComponent(jLabel6)))
                .addContainerGap(77, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(originmstComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(159, 159, 159))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel6)
                .addGap(50, 50, 50)
                .addComponent(originmstComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 92, Short.MAX_VALUE)
                .addComponent(showmstbtn)
                .addGap(64, 64, 64))
        );

        javax.swing.GroupLayout mstDialogLayout = new javax.swing.GroupLayout(mstDialog.getContentPane());
        mstDialog.getContentPane().setLayout(mstDialogLayout);
        mstDialogLayout.setHorizontalGroup(
            mstDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        mstDialogLayout.setVerticalGroup(
            mstDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        shortestPathDialog.setResizable(false);
        shortestPathDialog.setSize(new java.awt.Dimension(400, 300));

        jPanel3.setBackground(new java.awt.Color(21, 61, 121));

        showDijkstrabtn.setBackground(new java.awt.Color(255, 255, 255));
        showDijkstrabtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        showDijkstrabtn.setText("Dijkstra");
        showDijkstrabtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showDijkstrabtnActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Inital Vertex");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(126, 126, 126)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(showDijkstrabtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(125, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(originDijkstraComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(166, 166, 166))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel7)
                .addGap(49, 49, 49)
                .addComponent(originDijkstraComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(showDijkstrabtn)
                .addContainerGap(115, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout shortestPathDialogLayout = new javax.swing.GroupLayout(shortestPathDialog.getContentPane());
        shortestPathDialog.getContentPane().setLayout(shortestPathDialogLayout);
        shortestPathDialogLayout.setHorizontalGroup(
            shortestPathDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        shortestPathDialogLayout.setVerticalGroup(
            shortestPathDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(21, 61, 121));
        setPreferredSize(new java.awt.Dimension(1280, 720));
        setResizable(false);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(21, 61, 121));

        addEdge.setBackground(new java.awt.Color(255, 255, 255));
        addEdge.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        addEdge.setText("Add Edge");
        addEdge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addEdgeActionPerformed(evt);
            }
        });

        mstbtn.setBackground(new java.awt.Color(255, 255, 255));
        mstbtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        mstbtn.setText("MST");
        mstbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mstbtnActionPerformed(evt);
            }
        });

        titleShowDetails.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        titleShowDetails.setForeground(new java.awt.Color(255, 255, 255));
        titleShowDetails.setText("Details");

        showDetails.setEditable(false);
        showDetails.setColumns(20);
        showDetails.setRows(5);
        jScrollPane1.setViewportView(showDetails);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("GeoGraphs");

        traversalsbtn.setBackground(new java.awt.Color(255, 255, 255));
        traversalsbtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        traversalsbtn.setText("Traversals");
        traversalsbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                traversalsbtnActionPerformed(evt);
            }
        });

        cancelMst.setBackground(new java.awt.Color(255, 255, 255));
        cancelMst.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cancelMst.setText("Undo MST");
        cancelMst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelMstActionPerformed(evt);
            }
        });

        shortestPathbtn.setBackground(new java.awt.Color(255, 255, 255));
        shortestPathbtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        shortestPathbtn.setText("Shortest path");
        shortestPathbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shortestPathbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 30, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addEdge, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(titleShowDetails))
                    .addComponent(mstbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(shortestPathbtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(traversalsbtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE))
                    .addComponent(cancelMst, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(addEdge, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mstbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(cancelMst, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(shortestPathbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(traversalsbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addComponent(titleShowDetails)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );

        getContentPane().add(jPanel1);
        jPanel1.setBounds(990, 0, 290, 690);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void DFS(int u, int[][] M, boolean[] visited) {
        resultado += city.getiTower(u) + " ";
        visited[u] = true;
        for (int v = 0; v < M.length; v++) {
            if (M[u][v] != 0) {
                if (!visited[v]) {
                    DFS(v, M, visited);
                }
            }
        }
    }

    // Primero en anchura
    public void BFS(int i, int[][] M, boolean[] visited) {
        Queue<Integer> cola = new LinkedList<Integer>();
        visited[i] = true;
        cola.add(i);
        int temp;
        while (!cola.isEmpty()) {
            temp = cola.remove();
            resultado += city.getiTower(temp) + " ";

            for (int v = 0; v < M.length; v++) {
                if (M[temp][v] != 0) {
                    if (!visited[v]) {
                        visited[v] = true;
                        cola.add(v);
                    }

                }
            }
        }
    }

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:        
        if (evt.getButton() == 1) {
            if (evt.getX() < animation.getWidth() - 20 && evt.getY() < animation.getHeight() - 30) {
                if (city.checkSpace(evt.getX() - 15, evt.getY() - 30) == null) {
                    String s = JOptionPane.showInputDialog("Digite el numero de la torre");
                    if (s != null && !s.equals("")) {
                        if (isNumber(s)) {
                            int name = Integer.parseInt(s);
                            if (city.getTowers().size() == 0) {
                                city.addTower(new Tower(evt.getX() - 15, evt.getY() - 30, name));
                                this.animation.setMst(false);
                            } else {
                                if (city.getTower(name) == null) {
                                    city.addTower(new Tower(evt.getX() - 15, evt.getY() - 30, name));
                                    this.animation.setMst(false);
                                } else {
                                    JOptionPane.showMessageDialog(parentContent, "Ya existe esa torre", "Error ", 0);
                                }
                            }
                        } else {
                            JOptionPane.showMessageDialog(parentContent, "Debe digitar correctamente el número de la torre", "Error ", 0);
                        }
                    } else {
                        JOptionPane.showMessageDialog(parentContent, "No se agregó la torre", "Error ", 0);
                    }
                } else {
                    JOptionPane.showMessageDialog(parentContent, "Espacio incorrecto", "Error ", 0);
                }
            }
        } else if (evt.getButton() == 3) {
            Tower t = city.checkSpace(evt.getX() - 15, evt.getY() - 30);
            if (t != null) {
                city.deleteTower(t);
                this.animation.setMst(false);
            } else {
                JOptionPane.showMessageDialog(parentContent, "Seleccione una torre a eliminar", "Error ", 2);
            }
        }
    }//GEN-LAST:event_formMouseClicked

    private static boolean isNumber(String n) {
        try {
            Integer.parseInt(n);
            return true;
        } catch (NumberFormatException nfe) {
            return false;
        }
    }

    private void addEdgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addEdgeActionPerformed
        // TODO add your handling code here:
        if (city.getTowers().size() >= 2) {
            addEdgeDialog.setLocation(this.getX() + this.getWidth() - 400, this.getY() + this.getHeight() / 4);
            originComboBox.removeAllItems();
            destinyComboBox.removeAllItems();
            for (Tower tower : city.getTowers()) {
                originComboBox.addItem(tower.getName() + "");
                destinyComboBox.addItem(tower.getName() + "");
            }
            addEdgeDialog.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(parentContent, "Deben haber por lo menos 2 torres", "Error ", 0);
        }
    }//GEN-LAST:event_addEdgeActionPerformed

    private void mstbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mstbtnActionPerformed
        if (city.getTowers().size() >= 3) {
            if (city.getEdges().size() > 0) {
                mstDialog.setLocation(this.getX() + this.getWidth() - 400, this.getY() + this.getHeight() / 4);
                originmstComboBox.removeAllItems();
                for (Tower tower : city.getTowers()) {
                    originmstComboBox.addItem(tower.getName() + "");
                }
                mstDialog.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(parentContent, "Deben haber aristas", "Error ", 0);
            }
        } else {
            JOptionPane.showMessageDialog(parentContent, "Deben haber por lo menos 3 torres", "Error ", 0);
        }

    }//GEN-LAST:event_mstbtnActionPerformed

    private void traversalsbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_traversalsbtnActionPerformed
        // TODO add your handling code here:
        if (!this.animation.isMst()) {
            if (city.getTowers().size() >= 1) {
                traversalsDialog.setLocation(this.getX() + this.getWidth() - 400, this.getY() + this.getHeight() / 4);
                initialTowerComboBox.removeAllItems();
                for (Tower tower : city.getTowers()) {
                    initialTowerComboBox.addItem(tower.getName() + "");
                }
                traversalsDialog.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(parentContent, "Deben haber torres", "Error ", 0);
            }
        } else {
            if (JOptionPane.showConfirmDialog(null, "Se dibjujará el grafo original",
                    "OK_CANCEL_OPTION", JOptionPane.OK_CANCEL_OPTION,
                    JOptionPane.INFORMATION_MESSAGE) == 0) {
                if (city.getTowers().size() >= 1) {
                    traversalsDialog.setLocation(this.getX() + this.getWidth() - 400, this.getY() + this.getHeight() / 4);
                    initialTowerComboBox.removeAllItems();
                    for (Tower tower : city.getTowers()) {
                        initialTowerComboBox.addItem(tower.getName() + "");
                    }
                    this.animation.setMst(false);
                    traversalsDialog.setVisible(true);
                } else {
                    JOptionPane.showMessageDialog(parentContent, "Deben haber torres", "Error ", 0);
                }
            }
        }
    }//GEN-LAST:event_traversalsbtnActionPerformed

    private void BFSbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BFSbtnActionPerformed
        // TODO add your handling code here:
        traversalsDialog.setVisible(false);
        int[][] M = city.getAdjacencyMatrix();
        boolean V[] = new boolean[M.length];
        for (int i = 0; i < M.length; i++) {
            V[i] = false;
        }
        int i = city.getPosition(Integer.parseInt(initialTowerComboBox.getSelectedItem() + ""));
        resultado = "";
        BFS(i, M, V);
        showDetails.append("\nBFS: " + resultado);
    }//GEN-LAST:event_BFSbtnActionPerformed

    private void DFSbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DFSbtnActionPerformed
        // TODO add your handling code here:
        traversalsDialog.setVisible(false);
        int[][] M = city.getAdjacencyMatrix();
        boolean V[] = new boolean[M.length];
        for (int i = 0; i < M.length; i++) {
            V[i] = false;
        }
        int i = city.getPosition(Integer.parseInt(initialTowerComboBox.getSelectedItem() + ""));
        resultado = "";
        DFS(i, M, V);
        showDetails.append("\nDFS: " + resultado);
    }//GEN-LAST:event_DFSbtnActionPerformed

    private void weightTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_weightTxtKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_weightTxtKeyTyped

    private void addbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addbtnActionPerformed
        // TODO add your handling code here:
        int a = Integer.parseInt(originComboBox.getSelectedItem() + "");
        int b = Integer.parseInt(destinyComboBox.getSelectedItem() + "");
        if (a != b) {
            if (city.checkEdge(a, b)) {
                if (!weightTxt.getText().equals("")) {
                    int peso = Integer.parseInt(weightTxt.getText());
                    if (peso != 0) {
                        city.addEdge(new Edge(city.getTower(a), city.getTower(b), peso));
                        weightTxt.setText("");
                    } else {
                        JOptionPane.showMessageDialog(parentContent, "El peso debe ser mayor a 0", "Error ", 0);
                    }
                } else {
                    JOptionPane.showMessageDialog(parentContent, "Debe digitar el peso de la arista", "Error ", 0);
                }
            } else {
                JOptionPane.showMessageDialog(parentContent, "Ya existe una arista entre estas torres", "Error ", 0);
            }
        } else {
            JOptionPane.showMessageDialog(parentContent, "No se permiten bucles", "Error ", 0);
        }
    }//GEN-LAST:event_addbtnActionPerformed

    private void initialTowerComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_initialTowerComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_initialTowerComboBoxActionPerformed

    private void showmstbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showmstbtnActionPerformed
        // TODO add your handling code here:
        MST mst = new MST(city, city.getPosition(Integer.parseInt(originmstComboBox.getSelectedItem() + "")));
        mst.Algorithm_Prim();
        this.animation.setMstEdges(mst.getMstEdges());
        this.animation.setMst(true);
        mstDialog.setVisible(false);
    }//GEN-LAST:event_showmstbtnActionPerformed

    private void originComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_originComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_originComboBoxActionPerformed

    private void cancelMstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelMstActionPerformed
        // TODO add your handling code here:
        if (this.animation.isMst()) {
            if (JOptionPane.showConfirmDialog(null, "Se dibjujará el grafo original",
                    "OK_CANCEL_OPTION", JOptionPane.OK_CANCEL_OPTION,
                    JOptionPane.INFORMATION_MESSAGE) == 0) {
                this.animation.setMst(false);
            }
        } else {
            JOptionPane.showMessageDialog(null, "No se ha ejecutado el MST");
        }
    }//GEN-LAST:event_cancelMstActionPerformed

    private void shortestPathbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shortestPathbtnActionPerformed
        // TODO add your handling code here:
        if (city.getTowers().size() > 1) {
            if (city.getEdges().size() > 0) {
                shortestPathDialog.setLocation(this.getX() + this.getWidth() - 400, this.getY() + this.getHeight() / 4);
                originDijkstraComboBox.removeAllItems();
                for (Tower tower : city.getTowers()) {
                    originDijkstraComboBox.addItem(tower.getName() + "");
                }
                shortestPathDialog.setVisible(true);
            }else{
                JOptionPane.showMessageDialog(parentContent, "Deben haber aristas", "Error ", 0);
            }
        } else {
            JOptionPane.showMessageDialog(parentContent, "Deben haber por lo menos 2 torres", "Error ", 0);
        }
    }//GEN-LAST:event_shortestPathbtnActionPerformed

    private void showDijkstrabtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showDijkstrabtnActionPerformed
        // TODO add your handling code here:
        int n = city.getPosition(Integer.parseInt(originDijkstraComboBox.getSelectedItem() + ""));
        ShortestPath sp = new ShortestPath(city, n);
        int[] distances = sp.dijkstra();
        showDetails.append("\nShortest path:");
        for (int i = 0; i < distances.length; i++) {
            showDetails.append("\nDe "+city.getiTower(n)+" a "+city.getiTower(i)+" = "+ distances[i]);
        }
        shortestPathDialog.setVisible(false);
    }//GEN-LAST:event_showDijkstrabtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AnimationWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AnimationWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AnimationWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AnimationWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AnimationWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BFSbtn;
    private javax.swing.JButton DFSbtn;
    private javax.swing.JButton addEdge;
    private javax.swing.JDialog addEdgeDialog;
    private javax.swing.JButton addbtn;
    private javax.swing.JButton cancelMst;
    private javax.swing.JComboBox<String> destinyComboBox;
    private javax.swing.JComboBox<String> initialTowerComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel mainContent;
    private javax.swing.JDialog mstDialog;
    private javax.swing.JButton mstbtn;
    private javax.swing.JComboBox<String> originComboBox;
    private javax.swing.JComboBox<String> originDijkstraComboBox;
    private javax.swing.JComboBox<String> originmstComboBox;
    private javax.swing.JPanel parentContent;
    private javax.swing.JDialog shortestPathDialog;
    private javax.swing.JButton shortestPathbtn;
    private javax.swing.JTextArea showDetails;
    private javax.swing.JButton showDijkstrabtn;
    private javax.swing.JButton showmstbtn;
    private javax.swing.JLabel titleShowDetails;
    private javax.swing.JDialog traversalsDialog;
    private javax.swing.JButton traversalsbtn;
    private javax.swing.JTextField weightTxt;
    // End of variables declaration//GEN-END:variables
}
